@startuml
actor User
skinparam dpi 200
skinparam maxMessageSize 600
skinparam maxWidth 4096
skinparam maxHeight 4096

actor User
participant Controller as PaymentController
participant Service as CartService
participant Service as PaymentService
participant Helper as WebHelper
participant Helper as FileHelper
database Database

User -> Controller: POST /payment/payment
activate Controller

Controller -> Service: CartService.getItem(Cart c)
activate Service
Service -> Database: SELECT * FROM Cart WHERE cart_id = c.getCartId() AND member_id = c.getMemberId()
Database -> Service: Cart cart
deactivate Service

alt if exception occurs
    Service -> Helper: WebHelper.serverError(Exception e)
    deactivate Helper
    Controller -> User: return null
    deactivate Controller
end

Controller -> Helper: FileHelper.getUrl(cart.getImg())
activate Helper
Helper -> Controller: String imgUrl
deactivate Helper

Controller -> Service: PaymentService.addItem(Payment input)
activate Service
Service -> Database: INSERT INTO Payment (member_id, order_name, order_tel, addr1, addr2, nickname, addr_msg, total_price) VALUES (input.getMemberId(), input.getOrderName(), input.getOrderTel(), input.getAddr1(), input.getAddr2(), input.getNickname(), input.getAddrMsg(), input.getTotalPrice())
Database -> Service: Payment payment
deactivate Service

alt if exception occurs
    Service -> Helper: WebHelper.serverError(Exception e)
    deactivate Helper
    Controller -> User: return null
    deactivate Controller
end

Controller -> Controller: session.setAttribute("paymentId", payment.getPaymentId())
Controller -> Controller: model.addAttribute("payment", payment)
Controller -> Controller: model.addAttribute("item", carts)
Controller -> Controller: model.addAttribute("memberInfo", memberInfo)

Controller -> User: return "payment/payment"
deactivate Controller

@enduml